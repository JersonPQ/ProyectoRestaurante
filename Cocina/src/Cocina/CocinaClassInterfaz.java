/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Cocina;

import Salon.Pedido;
import java.awt.GridLayout;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import javax.swing.JButton;

/**
 *
 * @author jerson
 */
public class CocinaClassInterfaz extends javax.swing.JFrame implements Runnable{
    
    // atributos para devolver pedido a salon
    private Socket SocketPedidoDevolver;
    private ObjectOutputStream outputPedido;
    private ObjectInputStream inputArrayPedidos;
    
//    Pedido pedidoDevolver;    
    
    private ArrayList<Pedido> pedidosPendientes;
    
    public void conectar(){
        try {
            SocketPedidoDevolver = new Socket("127.0.0.1", 5555);
            outputPedido = new ObjectOutputStream(SocketPedidoDevolver.getOutputStream());
            inputArrayPedidos = new ObjectInputStream(SocketPedidoDevolver.getInputStream());
        } catch (IOException ex) {
            System.out.println(ex + " LINE: 38");
        }
    }
    
    public void recibirListaPedidosPendientes(){
        try {
            while (true) {                
                System.out.println("Cantidad pendientes antes: " + pedidosPendientes.size());
                
                // pedidos pendientes toma el valor del array enviado por ele servidor
                pedidosPendientes = (ArrayList<Pedido>) inputArrayPedidos.readObject();
                
                // actualiza panel cuando recibe pedido
                System.out.println("Cantidad de hamburguesas: " + pedidosPendientes.size());
                actualizarPanel();
                
                System.out.println("Cantidad pendientes despues: " + pedidosPendientes.size());
                System.out.println("Recibe pedido pendiente de servidor");
            }
        } catch (Exception e) {
            System.out.println(e + " LINE: 52");
        }
    }
    
    public void devolverPedido(Pedido pedidoDevolver){
        try {
            // coloca el pedido como completado
            pedidoDevolver.setPedidoCompletado();
            outputPedido.writeObject(pedidoDevolver);
            outputPedido.flush();
            borrarPedido(pedidoDevolver);
            
            actualizarPanel();
        } catch (Exception e) {
            System.out.println(e + " LINE: 68");
        }
    }
    
    public void borrarPedido(Pedido pedido){
        int index = pedidosPendientes.indexOf(pedido);
        pedidosPendientes.remove(index);
    }
    
    public void actualizarPanel(){
        System.out.println("Se actualiza");
        this.PanelCocina.removeAll();
        for(Pedido pedido: pedidosPendientes){
            this.PanelCocina.add(new PedidoCocina(pedido, this));
        }
        
        // actualiza ventana y la vuelve a diseñar luego de añadir los panels
        this.revalidate();
        this.repaint();
    }

    /**
     * Creates new form CocinaClassInterfaz
     */
    public CocinaClassInterfaz() {
        initComponents();
        PanelCocina.setLayout(new GridLayout(2, 4));
        pedidosPendientes = new ArrayList<>();
        actualizarPanel();
        conectar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelCocina = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PanelCocina.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout PanelCocinaLayout = new javax.swing.GroupLayout(PanelCocina);
        PanelCocina.setLayout(PanelCocinaLayout);
        PanelCocinaLayout.setHorizontalGroup(
            PanelCocinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelCocinaLayout.setVerticalGroup(
            PanelCocinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 397, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Sombrero.png"))); // NOI18N
        jLabel1.setText("Cocina");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addComponent(jLabel1)
                .addContainerGap(311, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelCocina, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(PanelCocina, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CocinaClassInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CocinaClassInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CocinaClassInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CocinaClassInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        ///////////////////////////////////////////////////////////////
        
        CocinaClassInterfaz cocinaInterfaz = new CocinaClassInterfaz();
        
        Thread hiloRecibirServidor = new Thread(cocinaInterfaz);
        hiloRecibirServidor.start();
        
        cocinaInterfaz.setVisible(true);
        
        ///////////////////////////////////////////////////////////////
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelCocina;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        
        // inicia metodo para recibir de servidor
        recibirListaPedidosPendientes();
    }
}
